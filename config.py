import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

class Config:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Flask
    SECRET_KEY = os.environ.get('SECRET_KEY') or 'videodl-secret-key-2024'
    FLASK_ENV = os.environ.get('FLASK_ENV') or 'development'
    DEBUG = os.environ.get('FLASK_DEBUG', 'True').lower() == 'true'
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
    HOST = os.environ.get('HOST') or '0.0.0.0'
    PORT = int(os.environ.get('PORT') or 5000)
    
    # –ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
    DOWNLOADS_DIR = os.environ.get('DOWNLOADS_DIR') or 'downloads'
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 500MB)
    MAX_CONTENT_LENGTH = int(os.environ.get('MAX_CONTENT_LENGTH') or 500 * 1024 * 1024)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∏–¥–µ–æ
    VIDEO_QUALITY = os.environ.get('VIDEO_QUALITY') or 'best[height<=720]/best'
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ yt-dlp
    YDL_OPTS = {
        'format': VIDEO_QUALITY,
        'noplaylist': True,
        'extractaudio': False,
        'audioformat': 'mp3',
        'embed_thumbnail': True,
        'writesubtitles': False,
        'writeautomaticsub': False,
    }
    
    # Telegram API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    TELEGRAM_API_ID = os.environ.get('TELEGRAM_API_ID')
    TELEGRAM_API_HASH = os.environ.get('TELEGRAM_API_HASH')
    TELEGRAM_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
    
    # Instagram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    INSTAGRAM_USERNAME = os.environ.get('INSTAGRAM_USERNAME')
    INSTAGRAM_PASSWORD = os.environ.get('INSTAGRAM_PASSWORD')
    
    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    SUPPORTED_PLATFORMS = {
        'youtube': {
            'domains': ['youtube.com', 'youtu.be', 'm.youtube.com', 'music.youtube.com'],
            'name': 'YouTube',
            'emoji': 'üé¨'
        },
        'tiktok': {
            'domains': ['tiktok.com', 'vm.tiktok.com', 'm.tiktok.com', 'vt.tiktok.com'],
            'name': 'TikTok',
            'emoji': 'üéµ'
        },
        'instagram': {
            'domains': ['instagram.com', 'm.instagram.com', 'www.instagram.com'],
            'name': 'Instagram',
            'emoji': 'üì∏'
        },
        'telegram': {
            'domains': ['t.me', 'telegram.me', 'telegram.org'],
            'name': 'Telegram',
            'emoji': 'üí¨'
        }
    }
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    ALLOWED_EXTENSIONS = {'mp4', 'avi', 'mov', 'mkv', 'webm', 'mp3', 'm4a', 'jpg', 'png'}
    MAX_FILENAME_LENGTH = 255
    
    @staticmethod
    def get_platform_info(platform_name):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ"""
        return Config.SUPPORTED_PLATFORMS.get(platform_name, {})
    
    @staticmethod
    def is_platform_supported(domain):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞"""
        domain = domain.lower()
        for platform, info in Config.SUPPORTED_PLATFORMS.items():
            if any(d in domain for d in info['domains']):
                return platform
        return None 