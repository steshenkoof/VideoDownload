#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ API —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
"""

import requests
import json
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://127.0.0.1:5000"
TEST_URLS = [
    "https://www.youtube.com/watch?v=dQw4w9WgXcQ",  # Rick Roll (–∫–ª–∞—Å—Å–∏–∫–∞)
    "https://www.tiktok.com/@example/video/123456789",  # TikTok (–ø—Ä–∏–º–µ—Ä)
    "https://www.instagram.com/p/example/",  # Instagram (–ø—Ä–∏–º–µ—Ä)
]

def test_video_info(url):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ"""
    print(f"\nüîç –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ: {url}")
    
    try:
        response = requests.post(
            f"{BASE_URL}/info",
            json={"url": url},
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                print(f"‚úÖ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {data.get('platform', 'Unknown')}")
                print(f"üì∫ –ù–∞–∑–≤–∞–Ω–∏–µ: {data.get('title', 'Unknown')}")
                print(f"üë§ –ê–≤—Ç–æ—Ä: {data.get('uploader', 'Unknown')}")
                print(f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {data.get('duration', 0)} —Å–µ–∫")
                print(f"üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {data.get('view_count', 0)}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', 'Unknown error')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def test_video_download(url):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ"""
    print(f"\n‚¨áÔ∏è  –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ: {url}")
    
    try:
        response = requests.post(
            f"{BASE_URL}/download",
            json={"url": url},
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                print(f"‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ!")
                print(f"üìÅ –§–∞–π–ª: {data.get('filename', 'Unknown')}")
                print(f"üì∫ –ù–∞–∑–≤–∞–Ω–∏–µ: {data.get('title', 'Unknown')}")
                print(f"üé¨ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {data.get('platform', 'Unknown')}")
                
                # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
                files_response = requests.get(f"{BASE_URL}/files")
                if files_response.status_code == 200:
                    files_data = files_response.json()
                    if files_data.get('success'):
                        print(f"üìä –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(files_data.get('files', []))}")
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {data.get('error', 'Unknown error')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def test_stats():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Ä–≤–∏—Å–∞"""
    print(f"\nüìä –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Ä–≤–∏—Å–∞...")
    
    try:
        response = requests.get(f"{BASE_URL}/stats")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
                print(f"üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {data.get('total_files', 0)}")
                print(f"üíæ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {data.get('total_size_mb', 0)} MB")
                print(f"üì± –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: {', '.join(data.get('supported_platforms', []))}")
                print(f"‚öôÔ∏è  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {data.get('max_file_size_mb', 0)} MB")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', 'Unknown error')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def interactive_test():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –≤–≤–æ–¥–æ–º"""
    print("\nüéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ")
    print("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ (–∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
    
    while True:
        url = input("\nüîó URL: ").strip()
        
        if url.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥']:
            break
            
        if not url:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É!")
            continue
            
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        if test_video_info(url):
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Å–∫–∞—á–∏–≤–∞—Ç—å –ª–∏
            choice = input("\n‚ùì –°–∫–∞—á–∞—Ç—å —ç—Ç–æ –≤–∏–¥–µ–æ? (y/n): ").strip().lower()
            if choice in ['y', 'yes', '–¥–∞', '–¥']:
                test_video_download(url)
        
        print("\n" + "="*50)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ VideoDL")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code != 200:
            print(f"‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python app.py")
        return
    
    print("‚úÖ –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω!")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    test_stats()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ...")
    for url in TEST_URLS[:1]:  # –¢–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        test_video_info(url)
        time.sleep(1)
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    try:
        interactive_test()
    except KeyboardInterrupt:
        print("\n\nüëã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 