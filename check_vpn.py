#!/usr/bin/env python3
"""
üåê –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞—à —Ç–µ–∫—É—â–∏–π IP –∞–¥—Ä–µ—Å –∏ —Å—Ç—Ä–∞–Ω—É
"""

import requests
import json
from datetime import datetime

def check_ip_and_location():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π IP –∞–¥—Ä–µ—Å –∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à —Ç–µ–∫—É—â–∏–π IP –∞–¥—Ä–µ—Å...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º IP —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        services = [
            ("ipapi.co", "https://ipapi.co/json/"),
            ("ipinfo.io", "https://ipinfo.io/json"),
            ("httpbin.org", "https://httpbin.org/ip")
        ]
        
        for service_name, url in services:
            try:
                print(f"üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ {service_name}...")
                response = requests.get(url, timeout=10)
                
                if response.status_code == 200:
                    data = response.json()
                    
                    if service_name == "ipapi.co":
                        ip = data.get('ip', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        country = data.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        city = data.get('city', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        org = data.get('org', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        
                        print(f"‚úÖ {service_name} —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
                        print(f"   üåê IP: {ip}")
                        print(f"   üè≥Ô∏è –°—Ç—Ä–∞–Ω–∞: {country}")
                        print(f"   üèôÔ∏è –ì–æ—Ä–æ–¥: {city}")
                        print(f"   üè¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {org}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –ª–∏ IP  
                        is_russian = country.lower() in ['russia', 'russian federation', '—Ä–æ—Å—Å–∏—è']
                        if is_russian:
                            print("   ‚ùå –í–ù–ò–ú–ê–ù–ò–ï: –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π IP!")
                            print("   üö´ TikTok –∏ YouTube –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã")
                            print("   üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å VPN")
                        else:
                            print(f"   ‚úÖ –û—Ç–ª–∏—á–Ω–æ! IP –Ω–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π ({country})")
                            print("   üéâ TikTok –∏ YouTube –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å!")
                        
                        return not is_russian
                        
                    elif service_name == "ipinfo.io":
                        ip = data.get('ip', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        country = data.get('country', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        city = data.get('city', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        org = data.get('org', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        
                        print(f"‚úÖ {service_name} —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
                        print(f"   üåê IP: {ip}")
                        print(f"   üè≥Ô∏è –°—Ç—Ä–∞–Ω–∞: {country}")
                        print(f"   üèôÔ∏è –ì–æ—Ä–æ–¥: {city}")
                        print(f"   üè¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {org}")
                        
                    elif service_name == "httpbin.org":
                        ip = data.get('origin', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        print(f"‚úÖ {service_name} —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
                        print(f"   üåê IP: {ip}")
                        
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                    
            except requests.exceptions.RequestException as e:
                print(f"   üö´ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ {service_name}: {e}")
                continue
                
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ IP: {e}")
        return False

def test_access_to_blocked_sites():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–∞–π—Ç–∞–º"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–∞–π—Ç–∞–º...")
    
    test_sites = [
        ("TikTok", "https://www.tiktok.com"),
        ("YouTube", "https://www.youtube.com"),
        ("Instagram", "https://www.instagram.com")
    ]
    
    results = {}
    
    for site_name, url in test_sites:
        try:
            print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º {site_name}...")
            response = requests.get(url, timeout=10, allow_redirects=False)
            
            if response.status_code in [200, 301, 302]:
                print(f"   ‚úÖ {site_name}: –î–æ—Å—Ç—É–ø–µ–Ω! (–∫–æ–¥ {response.status_code})")
                results[site_name] = True
            else:
                print(f"   ‚ö†Ô∏è {site_name}: –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã (–∫–æ–¥ {response.status_code})")
                results[site_name] = False
                
        except requests.exceptions.RequestException as e:
            print(f"   ‚ùå {site_name}: –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ({e})")
            results[site_name] = False
    
    return results

def print_recommendations(vpn_active, site_results):
    """–í—ã–≤–æ–¥–∏—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    print("\n" + "="*50)
    print("üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("="*50)
    
    if vpn_active:
        print("‚úÖ VPN –∞–∫—Ç–∏–≤–µ–Ω - –æ—Ç–ª–∏—á–Ω–æ!")
        print("üéØ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å:")
        print("   python app_russia_v2.py")
        print("   –û—Ç–∫—Ä–æ–π—Ç–µ: http://127.0.0.1:5001")
        
        if all(site_results.values()):
            print("üéâ –í—Å–µ —Å–∞–π—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã - –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ!")
        else:
            blocked = [site for site, accessible in site_results.items() if not accessible]
            print(f"‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∞–π—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {', '.join(blocked)}")
            print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–º–µ–Ω–∏—Ç—å —Å–µ—Ä–≤–µ—Ä VPN –Ω–∞ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π")
    else:
        print("‚ùå VPN –ù–ï –∞–∫—Ç–∏–≤–µ–Ω!")
        print("üö´ TikTok –∏ YouTube –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –†–æ—Å—Å–∏–∏")
        print("\nüìã –ß–¢–û –î–ï–õ–ê–¢–¨:")
        print("1. üì• –°–∫–∞—á–∞–π—Ç–µ ProtonVPN: https://protonvpn.com/")
        print("2. üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)")
        print("3. üá∫üá∏ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É –≤ –°–®–ê")
        print("4. üîÑ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        print("5. ‚úÖ –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üåê VPN –ü–†–û–í–ï–†–ö–ê - –°–µ—Ä–≤–∏—Å –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ")
    print(f"‚è∞ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º IP –∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    vpn_active = check_ip_and_location()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç–∞–º
    site_results = test_access_to_blocked_sites()
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print_recommendations(vpn_active, site_results)
    
    print("\nüîß –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN —Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∞–π–ª: VPN_SETUP_GUIDE.md")

if __name__ == "__main__":
    main() 